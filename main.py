import logging

from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import state


from chatgpt import *

from db import *

API_TOKEN = '6035234083:AAFg2O4tkqhpmtztfnm_3HQUxen_3Fcax1o'

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

file = open('db.txt', '+a')
file.close()


class Profile(StatesGroup):
    id = State()
    count = State()
    status = State()


@dp.message_handler(commands='start')
async def send_welcome(message: types.Message):
    a = f'ü§ñ –ü—Ä–∏–≤–µ—Ç, @{message.from_user.username}! –Ø –±–æ—Ç ChatGPT!\n\nüîó –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\n–¢–∞–∫–∂–µ –±–æ—Ç –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –≥—Ä—É–∑–∏—Ç—å –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç.\
 –í—Å–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ OpenAI!\n\n–°–æ–≤–µ—Ç—ã –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:\n‚Äì –ó–∞–¥–∞–≤–∞–π—Ç–µ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —Ä–∞—Å–ø–∏—Å—ã–≤–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–µ–µ.\n‚Äì –ù–µ –ø–∏—à–∏—Ç–µ –µ—Ä—É–Ω–¥—É –∏–Ω–∞—á–µ –æ–¥–µ—Ä–∂–∏—Ç–µ –µ—ë –∂–µ –≤ –æ—Ç–≤–µ—Ç.\n\n\
–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤/–∑–∞–ø—Ä–æ—Å–æ–≤:\n~ –°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 7 * 8?\n~ –ö–æ–≥–¥–∞ –Ω–∞—á–∞–ª–∞—Å—å –í—Ç–æ—Ä–∞—è –ú–∏—Ä–æ–≤–∞—è?\n~ –ù–∞–ø–∏—à–∏ –∫–æ–¥ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –Ω–∞ Python\n~ –ù–∞–ø–∏—à–∏ —Å–æ—á–∏–Ω–µ–Ω–∏–µ –∫–∞–∫ —è –ø—Ä–æ–≤–µ–ª –ª–µ—Ç–æ\n\n\
üî• –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å CHATGPT –≤ —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ üëáüèª'
    add_user(str(message.chat.id))
    await message.reply(a)


@dp.message_handler()
async def chat(message: types.Message):
    a = chat_ai(message.text)
    if add_user(str(message.chat.id)) is False:
        count_user(str(message.chat.id))
        if str(get_count(str(message.chat.id))) == '2':
            user_status = await bot.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
            print(user_status)
            #try:
                # –≠—Ç–æ –¥–ª—è —Ç–µ—Ö —É –∫–æ–≥–æ –µ—Å—Ç—å —Ñ–∞–º–∏–ª–∏—è
                # –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –¥–∞–ª—å—à–µ
            #    if user_channel_status[70] != 'left':
            #        await bot.send_message(message.from_user.id, '')
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω
            #    else:
            #        await bot.send_message(message.chat.id, '')
                    # –¢—Ä–µ–±—É–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
            #except:
                # –î–ª—è —Ç–µ—Ö –∫—Ç–æ –±–µ–∑ —Ñ–∞–º–∏–ª–∏–∏
            #    if user_channel_status[60] != 'left':
            #        await bot.send_message(message.from_user.id, '')
                    # –ø–æ–¥–ø–∏—Å–∞–Ω
            #    else:
            #        await bot.send_message(message.from_user.id, '')
                    # –¢—Ä–µ–±—É–µ–º –ø–æ–¥–ø–∏—Å–∫–∏

        await message.reply(a)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
